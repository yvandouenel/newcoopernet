{#
/**
 * @file
 * Theme override to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
     Only "getter" methods (method names starting with "get", "has", or "is")
     and a few common methods such as "id" and "label" are available. Calling
     other methods (such as node.delete) will result in an exception.
 * - label: The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: Themed creation date field.
 * - author_name: Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @ingroup templates
 *
 * @see template_preprocess_node()
 *
 * @todo Remove the id attribute (or make it a class), because if that gets
 *   rendered twice on a page this is invalid CSS for example: two lists
 *   in different view modes.
 */
#}
{% set classes = [
node.bundle|clean_class,
node.isPromoted() ? 'is-promoted',
node.isSticky() ? 'is-sticky',
not node.isPublished() ? 'is-unpublished',
view_mode ? view_mode|clean_class,
'clearfix',
] %}
<div>

    {{ title_prefix }}
    {% if not page %}
        <h2{{ title_attributes }}>
            <a href="{{ url }}" rel="bookmark">{{ label }}</a>
        </h2>
    {% endif %}
    {{ title_suffix }}

    {% if display_submitted %}
        <footer>
            {{ author_picture }}
            <div{{ author_attributes.addClass('author') }}>
                {% trans %}Submitted by {{ author_name }} on {{ date }}{% endtrans %}
                {{ metadata }}
            </div>
        </footer>
    {% endif %}
    <div class="row row-eq-height">
        <div class="col-md-3">
            <div class="panel panel-default">
            <h3>Coût</h3>
            <p>{{ content.field_training_price }}</p>
            </div>
        </div>
        <div class="col-md-4">
            <div class="panel panel-default">
            <h3>Lieu</h3>
            <p>{{ content.field_training_place }}</p>
            </div>
        </div>
        <div class="col-md-3">
            <div class="panel panel-default">
                <h3>Prochaine session</h3>
                <p>{{ content.field_training_next_session }}</p>
            </div>
        </div>
        <div class="col-md-2">
            <div class="panel panel-default">
                <h3>Durée</h3>
                <p>{{ content.field_training_duration }}</p>
            </div>
        </div>
    </div>
    <div class="row row-two-cols">
        <div class="col-md-7">
            {{ content.field_training_summary }}
            {{ content.body }}

        </div>
        <div class="col-md-5">
            <div class="contour-gris col-right formateur">
                <h3>Formateur</h3>
                <h4><a href="/equipe/yvan-douenel">Yvan Douënel</a></h4>
                <p class="clear-after"><a href="/equipe/yvan-douenel"><img id="img-formateur" src="/themes/coopernet/less/images/yvan.jpg"
                        alt="Yvan Douënel formateur web"></a>Intervient depuis 2001 en entreprise et depuis 2009 au sein du
                    master II "Communication et Technologie Numérique" (Ecole des Mines / CELSA).</p>

            </div>
            <div class="contour-gris col-right">
                <h3 class="icon-mail">Contact</h3>

                <a style="font-size: 1.2em;"
                   href="mailto:contact@coopernet.fr">contact@coopernet.fr</a><br/>
                <a style="font-size: 1.4em;" href="tel:0661464334">06 61 46 43 34</a>
                <h4 class="h4-contact">Formulaire </h4>
                <div class="form-contact-fields">
                    {{ content.field_contact }}
                </div>
            </div>
        </div>
    </div>
    <div class="galerie-image">
        {{ content.field_gallerie_images }}
    </div>
</div>
